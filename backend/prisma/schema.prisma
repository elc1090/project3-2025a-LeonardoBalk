// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum TipoLink {
  track
  set
  clipe
}

model Usuario {
  id          String       @id @map("_id") @default(auto()) @db.ObjectId
  nomeUsuario String       @unique
  email       String       @unique
  senha       String
  criadoEm    DateTime     @default(now())
  links       Link[]       @relation("UsuarioLinks")
  favoritos   Favorito[]   @relation("UsuarioFavoritos")
}

model Link {
  id          String       @id @map("_id") @default(auto()) @db.ObjectId
  usuarioId   String       @db.ObjectId
  usuario     Usuario      @relation(fields: [usuarioId], references: [id], name: "UsuarioLinks")
  titulo      String
  url         String
  tipo        String
  genero      String       // ex: techno, house, etc.
  publico     Boolean      @default(true)
  imagem      String?
  criadoEm    DateTime     @default(now())
  favoritos   Favorito[]   @relation("LinkFavoritos")
}

model Favorito {
  id          String       @id @map("_id") @default(auto()) @db.ObjectId
  usuarioId   String       @db.ObjectId
  usuario     Usuario      @relation(fields: [usuarioId], references: [id], name: "UsuarioFavoritos")
  linkId      String       @db.ObjectId
  link        Link         @relation(fields: [linkId], references: [id], name: "LinkFavoritos")
  criadoEm    DateTime     @default(now())
}
